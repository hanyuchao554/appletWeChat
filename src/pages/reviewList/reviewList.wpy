<template>
<<<<<<< HEAD

  <div class="reviewList_page">
    <div class="header">
      <div class="header_left">
        <van-checkbox v-if="hasCheck" custom-class="v_checkBox"  checked-color="#005bac"  value="{{ allCheck }}"  @change="onChangeAllCheck"></van-checkbox>
          <van-dropdown-menu :z-index="9999">
            <van-dropdown-item id="dept" :title="currDeptName" @open="getDeptList">
              <div class="dropdown_item_cell" @click="onClickDept(undefined)"> 所有部门</div>
              <div class="dropdown_item_cell" v-for="item in deptList"  @click="onClickDept(item)"> {{ item.deptName }}</div>
            </van-dropdown-item>
          </van-dropdown-menu>
=======
  <div class="reviewList_page">
    <div class="header">
      <div class="header_left">
        <van-checkbox v-if="hasCheck"
                      custom-class="v_checkBox"
                      checked-color="#005bac"
                      value="{{ allCheck }}"
                      @change="onChangeAllCheck"></van-checkbox>
        <van-dropdown-menu style="margin-left: 20rpx;"
                           :z-index="9999">
          <van-dropdown-item id="dept"
                             :title="currDeptName"
                             @open="getDeptList">
            <div class="dropdown_item_cell"
                 @click="onClickDept(undefined)">
              所有部门
            </div>
            <div class="dropdown_item_cell"
                 v-for="item in deptList"
                 @click="onClickDept(item)">
              {{ item.deptName }}
            </div>
          </van-dropdown-item>
        </van-dropdown-menu>
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
      </div>
      <!-- <div class="header_center text-c">
      </div> -->
      <div class="header_right text-r">
<<<<<<< HEAD
        <div class="btn_d" @click="hasSelect">审核</div>
      </div>
    </div>

    <div class="content" :class="{'select_wrap':hasCheck}">
      <div class="item_wrap" v-for="(item,index) in list">
        <div v-if="hasCheck" class="checkBox">
          <van-checkbox custom-class="v_checkBox" checked-color="#005bac" value="{{ item.checked }}" @change="onChange(index)"></van-checkbox>
        </div>
        <div @click="onEditTask(item)" class="item" :class="{'select_item_wrap':hasCheck}">
          <div class="item_header">
            <div class="item_header_left">
              <div class="tag" style="background:{{item.requestTypeBg}}">{{ item.requestTypeStr }}</div>
              <div class="tag tags" v-if="item.isIntermodal == 1 ">联</div>
              <div class="txt text">{{item.deptName}}</div>
              <div class="txt">{{item.totalWeight / 1000}}吨</div>
              <div class="txt">{{item.important}}</div>
              <div class="txt" @tap.stop="contName(item.contPhon)">{{item.contName}}</div>
            </div>
            <div class="item_header_right">待审核</div>
          </div>
          <div class="title">{{item.listName}}</div>
          <div class="memo">申请备注:{{item.memo}}</div>
          <div class="item_content">
            <div class="item_content_right">
              <div class="item_content_right_t">驳运时间：{{item._startTime}}至{{item._endTime}}</div>
=======
        <div class="btn_d"
             @click="hasSelect">审核</div>
      </div>
    </div>
    <div class="content"
         :class="{'select_wrap':hasCheck}">
      <div class="item_wrap" 
v-for="(item,index) in list">
        <div v-if="hasCheck"
             class="checkBox">
          <van-checkbox custom-class="v_checkBox"
                        checked-color="#005bac"
                        value="{{ item.checked }}"
                        @change="onChange(index)"></van-checkbox>
        </div>
        <div @click="onEditTask(item)"
             class="item"
             :class="{'select_item_wrap':hasCheck}">
          <div class="item_header">
            <div class="item_header_left">
              <div class="tag"
                   style="background:{{item.requestTypeBg}}">
                {{ item.requestTypeStr }}
              </div>
              <div>
                {{item.listName}} {{item.important}}
              </div>
            </div>
            <div class="item_header_right">待审核</div>
          </div>
          <div class="contName" catchtap="contName(item.contPhone)" >联系人：{{item.contName}}</div>
          <div class="memo">
            申请备注:{{item.memo}}
          </div>
          <div class="item_content">
            <div class="item_content_right">
              <div class="item_content_right_t">
                {{item.deptName}} / {{item.goodsWeight}}吨 /{{item._startTime}}至{{item._endTime}}
              </div>
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
              <div class="common_step">
                <div class="common_step_left">
                  <div class="common_step_left_t"></div>
                  <div class="common_step_left_c"></div>
                  <div class="common_step_left_b"></div>
                </div>
                <div class="common_step_center">
<<<<<<< HEAD
                  <div class="ellipsis">起始地：{{ item.startPositionName }}</div>
                  <div class="ellipsis">目的地：{{ item.endPositionName }}</div>
                </div>
              </div>
              <div class="" v-for="(k,j) in item.intermodalTaskVoList" @tap.stop="Changelocation(k,j)">
                <div class="title transcript">{{k.listName}}</div>
                <div class="common_step" >
                  <div class="common_step_left">
                    <div class="common_step_left_t"></div>
                    <div class="common_step_left_c"></div>
                    <div class="common_step_left_b"></div>
                  </div>
                  <div class="common_step_center">
                    <div class="ellipsis">起始地：{{ k.startPositionName }}</div>
                    <div class="ellipsis">目的地：{{ k.endPositionName }}</div>
                  </div>
                </div>
              </div>  
=======
                  <div class="ellipsis">
                    起始地：{{ item.startPositionName }}
                  </div>
                  <div class="ellipsis">目的地：{{ item.endPositionName }}</div>
                </div>
              </div>
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
            </div>
          </div>
        </div>
      </div>
    </div>
<<<<<<< HEAD

    <div v-show="hasCheck" class="footer">
      <van-button custom-class="btn" type="default" @click="close">取消</van-button>
      <van-button custom-class="btn" color="#005BAC" type="default" @click="submit">确认</van-button>
    </div>
  </div>

  <van-popup round position="bottom" :close-on-click-overlay="false" closeable :show="hasApprovePop" @close="triggerPopUp">
    <approve @onSelect="onSelect" @onSuccess="onSuccess" :applyIds="applyIds" @close="triggerPopUp"></approve>
  </van-popup>

=======
    <div v-show="hasCheck"
         class="footer">
      <van-button custom-class="btn"
                  type="default"
                  @click="close">取消</van-button>
      <van-button custom-class="btn"
                  color="#005BAC"
                  type="default"
                  @click="submit">确认</van-button>
    </div>
    <van-popup v-if="hasApprovePop"
               round
               position="bottom"
               :close-on-click-overlay="false" 
                closeable 
               :show="hasApprovePop"
               @close="triggerPopUp">
      <approve @onSelect="onSelect"
               @onSuccess="onSuccess"
               :applyIds="applyIds"
               @close="triggerPopUp"></approve>
    </van-popup>
  </div>
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
</template>

<script>
import { BaseDataKey } from '@/constant';
import wepy from '@wepy/core';
import formatTimeTwo from '@/utils/moment.js';
import CommonMixin from '@/mixins/commonMixin.js';
import store from '@/store';
import { mapMutations } from '@wepy/x';
wepy.page({
  store,
  mixins: [CommonMixin], 
  data: {
    currDeptName: '所有部门',
    deptList: [],
    list: [],
    hasCheck: false,
    allCheck: false,
    hasApprovePop: false,
    deptId: undefined,
    realTime:null,//实时数据对象
<<<<<<< HEAD
  },
  onShow() {
    this.appGetApprovalTasksList();
=======

  },
  onShow() {
    this.appGetApprovalTasksList();

>>>>>>> 44f8e328608455db489ed503617baad44fef2157
    //页面显示时触发每间隔一段时间就刷新数据
    let that = this
    this.realTime = setInterval(function(){
     that.appGetApprovalTasksList()
      wx.showToast({
        title: '数据已更新！'
      })
    },30000)
  },
  //页面隐藏是关闭计时器
  onHide(){
    clearInterval(this.realTime)
    // console.log("页面已经关闭")
  },
  //在返回上个页面的时候同样也关闭计时器停止刷新
  onUnload: function () {
     clearInterval(this.realTime)
  },
  onLoad() {
    this.setDetailApplyDo()
    // this.getDeptList()
  },
  //监听用户下拉刷新事件
  onPullDownRefresh(){
    this.appGetApprovalTasksList();
    wx.showToast({
      title:'数据已经更新'
    })
  },
  computed: {
    applyIds() {
      let _applyIds = [];
      this.list.forEach((item) => {
        if (item.checked) _applyIds.push(item.applyId);
      });
      return _applyIds;
    }
  },
  methods: {
    ...mapMutations(['setDetailApplyDo']),
<<<<<<< HEAD
    /**
     * 修改主任务的起始地目的地
     */
=======
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
    onEditTask(item) {
      let {
        applyId,
        endPositionName,
        endTimeStamp,
        startPositionName,
        startTimeStamp,
        startPositionId,
        endPositionId,
        _startTime,
        _endTime
      } = item
      let data = {
<<<<<<< HEAD
        prsId: applyId, //任务id
        endPositionName,//目的地
        startPositionId,//起始地id
        endPositionId,//目的地id
        startPositionName,//起始地
=======
        prsId: applyId,
        endPositionName,
        startPositionId,
        endPositionId,
        startPositionName,
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
        startTime: startTimeStamp,
        endTime: endTimeStamp,
        _startTime,
        _endTime
      }
      this.setDetailApplyDo(data) 
      wx.navigateTo({
          url: `/pages/reviewEditTask?applyType=${0}`,
       }) 
    },
<<<<<<< HEAD
    /**
     * 拨打联系人电话
     */
=======
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
    contName(tel){
      wx.makePhoneCall({ 
        phoneNumber:tel
      });
    },
<<<<<<< HEAD
    /**
     * 修改副任务的起始地目的地
     */
    Changelocation(item,index){
      let { endPositionName, endTime, startPositionName, startTime, startPositionId, endPositionId,id} = item
      let data = {
         endPositionName, 
         endTime:this.list[index].endTimeStamp, 
         endPositionId ,
         startPositionName, 
         startTime:this.list[index].startTimeStamp, 
         startPositionId,
         prsId:this.list[index].applyId,
         id
         }
      this.setDetailApplyDo(data) 
      wx.navigateTo({
          url: `/pages/reviewEditTask?applyType=${0}&index=${index}`,
       }) 
    },
=======
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
    triggerPopUp() {
      this.hasApprovePop = !this.hasApprovePop;
    },
    onSuccess() {
      this.hasApprovePop = false;
      this.allCheck = false;
      this.hasCheck = false;
      wx.showToast({
        icon: 'none',
        title: '操作成功'
      });
      this.appGetApprovalTasksList();
    },
    submit() {
      if (this.applyIds.length) {
        this.hasApprovePop = true;
      }
    },
    getSelectApplyIds() {
      this.list.filter((item) => item.checked);
    },
    onChange(index) {
      let item = this.list[index];
      item.checked = !item.checked;
    },
    onChangeAllCheck(e) {
      this.allCheck = e.$wx.detail;
      this.list.forEach((item) => {
        item.checked = e.$wx.detail;
      });
    },
    hasSelect() {
      if (this.list.length) {
        this.hasCheck = true;
      }
    },
    close() {
      this.hasCheck = false;
    },
    onClickDept(item) {
      this.deptId = item ? item.id : undefined;
      this.currDeptName = item ? item.deptName : '所有部门';
      this.$wx.selectComponent('#dept').toggle(false);
      this.appGetApprovalTasksList();
    },
    getDeptList() {
      wepy.$api('app/platformReason/appGetApprovalTasksApplyDeptList', {}).then(res => {
        this.deptList = res
      })
    },
    appGetApprovalTasksList() {
      wepy.$api('app/platformReason/appGetApprovalTasksList', { deptId: this.deptId || undefined }).then((res) => {
        this.list = [];
        if (!res || !res.length) {
          wx.showToast({
            title: '暂无审核内容',
            icon: 'none',
            duration: 3000
          });
        } else {
          this.list = res.map((item) => {
            this.setRequestType(item);
            item.goodsWeight = this.getWeight(item.goodsWeight);
            item._startTime = this.getTime(item.startTimeStamp);
            item._endTime = this.getTime(item.endTimeStamp);
            item.checked = false;
            setTimeout(()=>{
              wx.stopPullDownRefresh()
            },1500)
            return item;
          });
        }
      });
    },
    goToPage(url) {
      wx.navigateTo({
        url
      });
    },
    getTime(time) {
      return time ? formatTimeTwo(time * 1000, 'Y-M-D h:m') : '';
    }
  }
});
</script>

<config>
{
  navigationBarTitleText:'任务审核列表',
  "enablePullDownRefresh": true,
  "backgroundTextStyle": "dark" ,
  usingComponents:{
    "van-dropdown-menu": "module:@vant/weapp/dist/dropdown-menu/index",
    "van-dropdown-item": "module:@vant/weapp/dist/dropdown-item/index",
     "van-button": "module:@vant/weapp/dist/button/index",
     "van-image": "module:@vant/weapp/dist/image/index",
     "van-checkbox": "module:@vant/weapp/dist/checkbox/index",
     "van-checkbox-group": "module:@vant/weapp/dist/checkbox-group/index",
     "van-popup": "module:@vant/weapp/dist/popup/index",
     "approve": "~@/components/pop-up/approve"
  }
}
</config>

<style lang="less" scoped>
  view.van-dropdown-menu{
    height:80rpx;
  }
.dropdown_item_cell {
  display: flex;
  align-items: center;
  font-size: 32rpx;
  line-height: 44rpx;
  border-bottom: 2rpx solid #ececec;
  padding: 20rpx;
}
.reviewList_page {
  position: relative;
  height: 100vh;
  background: #f3f4f6;
  .header {
    position: absolute;
    display: flex;
    width: 100%;
    height: 100rpx;
    justify-content: space-between;
    align-items: center;
    font-size: 32rpx;
    background: #fff;
    padding: 0 24rpx;
    box-sizing: border-box;
    &_left {
      display: flex;
      align-items: center;
    }
    &_left,
    &_right {
      width: 25%;
    }
    &_center {
      width: 50%;
    }
    .btn_d {
      display: inline-block;
      width: 110rpx;
      height: 48rpx;
      line-height: 48rpx;
      border-radius: 4rpx;
      font-size: 30rpx;
      background: #005bac;
      text-align: center;
      font-size: 32rpx;
      color: #ffff;
    }
  }
  .content {
    position: absolute;
    width: 100%;
    top: 120rpx;
    bottom: 20rpx;
    overflow-y: scroll;
  }
}
<<<<<<< HEAD
=======
.contName{
  font-size: 28rpx;
  padding:10rpx 0;
  width: 50%;
}
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
.memo {
  font-size: 28rpx;
  margin: 0rpx 0 10rpx;
}
.item_wrap:first-child {
  margin-top: 0;
}
.item_wrap {
  display: flex;
  align-items: center;
  width: 702rpx;
  margin: 20rpx auto 0;
  .checkBox {
    width: 10%;
    flex: none;
  }
}
.select_item_wrap {
  width: 640rpx !important;
}
<<<<<<< HEAD
.title{
  margin-top: 15rpx;
  font-size: 28rpx;
}
=======
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
.item {
  width: 100%;
  background: #fff;
  box-shadow: 0rpx 0rpx 20rpx 0rpx #e1e5ee;
  border-radius: 8rpx;
  padding: 28rpx 26rpx;
  box-sizing: border-box;
  flex: none;
  &_header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    &_left {
      display: flex;
      align-items: center;
      font-size: 28rpx;
      font-weight: 500;
      color: #2b2b2b;
      line-height: 40rpx;
      .tag {
        color: #fff;
        font-size: 22rpx;
        padding: 5rpx 10rpx;
        line-height: 32rpx;
        border-radius: 5rpx;
        font-weight: 500;
<<<<<<< HEAD
        margin-right: 15rpx;
      }
      .tags{
        background: #70b603;
      }
      .txt{
        margin-left: 25rpx
      }
      .text{
        margin:0;
=======
        margin-right: 10rpx;
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
      }
    }
    &_right {
      font-size: 24rpx;
      font-weight: 500;
      color: #efa600;
      line-height: 34rpx;
    }
  }
  &_content {
    display: flex; // justify-content: space-between;
    margin-top: 12rpx;
    &_left {
      margin-right: 14rpx;
    }
    &_right {
      width: 100%;
      position: relative; // .common_step {
      //   width: 100%;
      //   position: absolute;
      //   bottom: 0;
      // }
      // .common_step_center {
      //   width: 100%;
      //   align-self: flex-end;
      // }
      &_t {
<<<<<<< HEAD
        font-size:28rpx;
        font-weight: 400;
=======
        font-size: 22rpx;
        font-weight: 400;
        color: #8e9298;
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
        line-height: 32rpx;
      }
    }
  }
}
.footer {
  display: flex;
  position: fixed;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  height: 130rpx;
  padding: 15rpx 24rpx;
  bottom: 0;
  box-sizing: border-box;
  .btn {
    width: 320rpx;
    height: 64rpx;
  }
}
.select_wrap {
  bottom: 130rpx !important;
}
<<<<<<< HEAD
.transcript{
  border-top:1rpx solid #d7d7d7;
  padding-top:10rpx;
}
=======
>>>>>>> 44f8e328608455db489ed503617baad44fef2157
</style>
