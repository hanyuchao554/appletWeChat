<template>
  <div class="cancelTask_page">
    <div class="content">
      <div class="title">请输入取消的原因</div>
      <div class="item"
           @click="triggerPopUp">
        <div class="item_value">{{ upData.reason || '未选择' }}</div>
        <div class="item_right">
          <van-icon color="#8E9298"
                    name="arrow-down" />
        </div>
      </div>
      <div class="title">请输入取消详细原因</div>
      <m-textarea height="250rpx"
                  :placeholder="undefined"
                  :isReplaceTextarea="hasCancelReason"
                  customStyle="background:#EDF1F4;"
                  :data="upData.reasonDetail"
                  @onChageData="onChangeTextarea"></m-textarea>
    </div>
    <div class="footer_btn_o">
      <van-button custom-class="btn"
                  type="default"
                  @click="closeAndBreak">取消</van-button>
      <van-button custom-class="btn"
                  :disabled="isDisabled"
                  color="#005BAC"
                  type="default"
                  @click="submit">确认</van-button>
    </div>
    <van-popup v-if="hasCancelReason"
               round
               position="bottom"
               :show="hasCancelReason"
               @close="closePopUp">
      <cancelReason @onSelect="onSelect"></cancelReason>
    </van-popup>
  </div>
</template>

<script>
import wepy from '@wepy/core';

wepy.page({
    data: {
        hasCancelReason: false,
        isDisabled: false,
        upData: {
            applyIdList: [],
            operator: '',
            reason: '',
            reasonDetail: ''
        }
    },

    onLoad({ applyIdList }) {
        this.upData.applyIdList = JSON.parse(applyIdList);
    },

    computed: {
        userId() {
            return wepy.$auth.getUserId();
        }
    },
    methods: {
        triggerPopUp() {
            this.hasCancelReason = !this.hasCancelReason;
        },
        closePopUp() {
            this.hasCancelReason = false;
        },
        onSelect(reason) {
            this.upData.reason = reason;
            this.closePopUp();
        },
        getDriverTaskStartOrNot() {
            wepy.$api('platform/driver/task/getDriverTaskStartOrNot', {
                applyId: this.upData.applyId
            }).then((res) => {
                this.upData.driverStartTask = res.driverStartOrNot;
            });
        },
        onChangeTextarea(data) {
            this.upData.reasonDetail = data;
        },
        closeAndBreak() {
            wx.navigateBack();
        },
        submit() {
            if (!this.upData.reason) {
                wx.showToast({
                    icon: 'none',
                    title: '请选择取消原因'
                });
            } else {
                this.completeCancelPlatformTask();
            }
        },
        completeCancelPlatformTask() {
            if (this.isDisabled) return;
            this.isDisabled = true;
            wepy.$loading();
            wepy.$api('app/cancel/reason/completeCancelPlatformTask', this.upData)
                .then(() => {
                    wx.redirectTo({
                        url: '/pages/cancelTask/cancelTaskSuccess'
                    });
                    wx.hideLoading();
                })
                .finally(() => {
                    this.isDisabled = false;
                });
        }
    }
});
</script>

<config>
{
    navigationBarTitleText:'任务取消',
    usingComponents:{
        "van-popup": "module:@vant/weapp/dist/popup/index",
        "van-button": "module:@vant/weapp/dist/button/index",
        "van-icon": "module:@vant/weapp/dist/icon/index",
        "cancelReason": "~@/components/pop-up/cancelReason",
        "m-textarea": "~@/components/control/m-textarea"
    }
}
</config>

<style lang="less" scoped>
.cancelTask_page {
    height: 100%;
    background: #fff;
}

.content {
    padding: 24rpx;
}
.title {
    margin-bottom: 24rpx;
    font-size: 32rpx;
    font-weight: bold;
    color: #2b2b2b;
    line-height: 44rpx;
}
.item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    height: 96rpx;
    margin-bottom: 40rpx;
    background: #edf1f4;
    border-radius: 8rpx;
    border: 2rpx solid #e4e5e5;
    padding: 0 40rpx;
    box-sizing: border-box;
    &_value {
        font-size: 32rpx;
        font-weight: 400;
        color: #2b2b2b;
        line-height: 44rpx;
    }
    &_right {
        input {
            display: inline-block;
            width: 160rpx;
            margin-right: 20rpx;
            vertical-align: middle;
            text-align: right;
        }
        text {
            vertical-align: middle;
        }
    }
}
</style>
