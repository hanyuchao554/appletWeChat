<template>
  <div class="lighterage_page">
    <div class="content">
      <div class="item" @click="getParentlist">
        <div class="item_value">{{ txt.parenttxt  || '请选择叉车驳运对象类型' }}</div>
        <div class="item_right">
          <van-icon color="#8E9298" name="arrow-down" />
        </div>
      </div>
      <div class="item {{ [ iscategory ? 'disable' : 'isdisable' ] }}"  @click="getchildlist" v-if="Showchildren">
        <div class="item_value">{{ txt.childrentxt  || '请选择物品品类' }}</div> 
        <div class="item_right">
          <van-icon color="#8E9298" name="arrow-down" />
        </div>
      </div>
      <div class="item item_name" v-if="isname">
        <text class="label">物品名称</text>
        <div class="textarea"> 
          <textarea type="textarea" v-model="txt.itemname" placeholder="请输入物品名称" auto-height placeholder-style="color:#888888;font-size：32rpx" bindinput="changeName" />
        </div>
      </div>
      <div class="item" v-if="txt.itemname != '' ">
        <div class="item_value">重量：</div>
        <div class="item_right">
          <input type="digit" input-align="right" @change="onChangeGoodsWeight" v-model="detailApplyDo.goodsWeightStr" placeholder="请输入重量" />
          <text>吨</text>
        </div>
      </div>
    </div>
    <div class="footer">
      <van-button custom-class="btn" @click="submit">确定</van-button>
    </div>
    <!-- @close="hideForkPullDown" -->
    <div v-if="ischildren">
      <van-popup v-if="hasForkPullDown" round position="bottom" :show="hasForkPullDown">
        <!-- <forkPullDown placeholder="查找物品类型" hasSearch title="选择物品类型" :requestData="requestData" @onSelect="onSelect"></forkPullDown> -->
        <div class="list">
          <div class="list_hed">
            <div class="list_hed_title">
              <text class="list_hed_title_left">选择物品名称</text>
              <div @click="hideForkPullDown">
                <van-icon name="cross" />
              </div>
            </div>
            <div class="list_hed_search">
              <!-- <van-search value="{{ searchtxt }}" bind:change="changinput"  placeholder="请输入搜索关键词" />   -->
              <!-- <div class="search">
                <div class="icon">
                  <van-icon name="search" />
                </div>
                <input type="text" value="{{searchData}}" placeholder="请输入物品名称" placeholder-class="placeholder" bindinput="Onchange" />
              </div> -->
            </div>
          </div>
          <div class="list_item">
            <div class="text" v-for="(item,index) in searchData ? searchList : Parentlist" @tap.stop="Selectchildren(index,item.confId)">{{item.paramValue}}</div>
          </div>
        </div>
      </van-popup>
    </div>
    <div v-else>
      <van-popup v-if="hasForkPullDown" round position="bottom" :show="hasForkPullDown">
        <!-- <forkPullDown placeholder="查找物品类型" hasSearch title="选择物品类型" :requestData="requestData" @onSelect="onSelect"></forkPullDown> -->
        <div class="list">
          <div class="list_hed">
            <div class="list_hed_title">
              <text class="list_hed_title_left">选择物品类型</text>
              <div @click="hideForkPullDown">
                <van-icon name="cross" />
              </div>
            </div>
            <div class="list_hed_search">
              <!-- <van-search value="{{ value }}" placeholder="请输入搜索关键词" />   -->
              <!-- <div class="search">
                <div class="icon">
                  <van-icon name="search" />
                </div>
                <input type="text" value="{{searchData}}" placeholder="请输入物品类型" placeholder-class="placeholder" bindinput="Onchange" />
              </div> -->
            </div>
          </div>
          <div class="list_item">
            <div class="text" v-for="(item,index) in searchData ? searchList : Parentlist" @tap.stop="SelectParent(index,item.confId)">{{item.paramValue}}</div>
          </div>
        </div>
      </van-popup>
    </div>
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import eventHub from '@/common/eventHub';
  import {
    mapState,
    mapMutations
  } from '@wepy/x';
  import store from '@/store';
  wepy.page({
    store,
    data: {
      confId:'',
      hasForkPullDown: false,
      Parentlist:[],
      searchList:[],
      searchData:'',
      Showchildren:false,
      ischildren:false,
      isname:false,
      isweight:false,
      iscategory:true,
      type:1,
      isindex:'',
      txt:{
        parenttxt:'',
        childrentxt:'',
        itemname:'',
      }
    },
    onShow(){
      console.log(this.detailApplyDo)
      this.txt.parenttxt = this.detailApplyDo.goodsTypeName
      if(this.detailApplyDo.goodsnamestr){
        this.txt.childrentxt = this.detailApplyDo.goodsnamestr
        this.Showchildren = true
      }
      if(this.detailApplyDo.goodsCode){
        this.txt.itemname = this.detailApplyDo.goodsCode
        this.isname = true
      }
    },
    // async onLoad() {},
    computed: {
      ...mapState(['detailApplyDo'])
    },
    methods: {
      ...mapMutations(['setDetailApplyDo']),
      /**
       * 弹窗列表选择驳运对象，
       */
      SelectParent(index,id){
        console.log(this.type)
        this.txt.parenttxt = this.Parentlist[index].paramValue
        this.$set(this.detailApplyDo ,'goodsTypeName',this.txt.parenttxt)
        this.confId = id
        this.type = 2
        if(this.type == 2){
          this.isname = true
        }
        this.iscategory = false
        this.getgoodslist()
        this.hideForkPullDown()
      },
      /**
       * 弹窗列表选择物品品类，
       */
      Selectchildren(index,id){
        this.txt.childrentxt = this.Parentlist[index].paramValue
        let txt = this.detailApplyDo.goodsTypeName +'-'+this.txt.childrentxt
        this.$set(this.detailApplyDo, 'goodsTypeName', txt);
        this.$set(this.detailApplyDo, 'goodsnamestr',this.txt.childrentxt)
        this.$set(this.detailApplyDo, 'goodsType', id);
        this.hideForkPullDown()
      },
      /**
       * 获取列表数据  
       * type=1获取驳运对象
       * type=2获取物品名称
       */
      getgoodslist(){
        wepy.$api('app/forkPullDown/selByParamKeyOperatorType',{
          followConfId: '3',
          parentId: '8',
          type:this.type,
          confId:this.confId || '',
        }).then((res)=>{
            if(res.length){
                if(this.type == 2){
                   this.Showchildren = true
                }
                this.Parentlist = res
            }else{
              this.Showchildren = false
              this.isname = true
              this.Parentlist = []
              this.txt.childrentxt = ''
              this.detailApplyDo.goodsCode = ''
            }
        })
      },
      /**
       * 获取物品名称
       */
      getchildlist(){
        this.ischildren = true
        if(this.confId){
          this.type = 2
          this.getgoodslist()
        }
        this.showForkPullDown()
      },
      /**
       * 获取驳运对象
       */
      getParentlist(){
        this.type = 1
        this.ischildren = false
        this.getgoodslist()
        this.showForkPullDown()
      },
      /**
       * 显示弹出层
       */
      showForkPullDown() {
        this.hasForkPullDown = true;
        this.searchData = ''
      },
      /**
       * 关闭弹出层
       */
      hideForkPullDown() {
        this.hasForkPullDown = false;
      },
      /**
       * 搜索框输入内容
       */
      Onchange(e){
        this.searchData = e.$wx.detail.value
        let reg = new RegExp(this.searchData);
        this.Parentlist.forEach(item=>{
         if(item.paramValue == this.searchData){
           this.searchList.push(item)
          }
        })
      },
      /**
       * 获取当前输入内容
       */
      changeName(e){
        this.txt.itemname = e.$wx.detail.value
        this.$set(this.detailApplyDo, 'goodsCode', e.$wx.detail.value);
        // let reg = new RegExp(this.searchtxt);
        // this.Parentlist = this.Parentlist.filter((item) => reg.test(item));
      },
      // onChangeGoodsCode(e) {
      //   this.$set(this.detailApplyDo, 'goodsCode', e.$wx.detail.value);
      //   this.$set(this.detailApplyDo, 'goodsCodeStr', e.$wx.detail.value);
      // },
      onChangeGoodsWeight(e) {
        let value = e.$wx.detail.value || 0;
        this.$set(this.detailApplyDo, 'goodsWeight', Math.floor(value * 1000));
        this.$set(this.detailApplyDo, 'goodsWeightStr', value);
      },
      // onSelect(data) {
      //   this.$set(this.detailApplyDo, 'goodsType', data.confId);
      //   this.$set(this.detailApplyDo, 'goodsTypeName', data.paramValue);
      //   this.hideForkPullDown();
      // },
      setJobQuantity() {
        let {
          totalCartWeigh,
          goodsWeightStr
        } = this.detailApplyDo
        if (totalCartWeigh && goodsWeightStr) {
          let num = Math.ceil(goodsWeightStr / totalCartWeigh)
          this.$set(this.detailApplyDo, 'jobQuantity', num);
        }
      },
      async submit() {
        let {
          goodsWeight,
          goodsCode,
          goodsType,
          goodsTypeName,
          goodsWeightStr,
          goodsnamestr,
        } = this.detailApplyDo;
        if (!goodsType) {
          wepy.$showToast('请选择物品类型');
        }else if (!goodsCode) {
          wepy.$showToast('请输入物品名称');
        } else if (!goodsWeight) {
          wepy.$showToast('请输入物品重量');
        } else if (Math.floor(goodsWeight / 1000) > 100000) {
          wepy.$showToast('物品重量最大100000吨');
        } else {
          let lighterageStr = ''

          lighterageStr = `${goodsTypeName}-${goodsCode}-${goodsWeight ? goodsWeightStr + '吨' : ''}`;
          this.$set(this.detailApplyDo, 'lighterageStr', lighterageStr);
          this.setJobQuantity()
          wx.navigateBack();
        }
      },
    }
  });
</script>

<config>
{
    navigationBarTitleText:'选择叉车驳运物品',
    usingComponents: {
          "forkPullDown": "~@/components/pop-up/forkPullDown",
          "van-popup": "module:@vant/weapp/dist/popup/index",
          "van-button": "module:@vant/weapp/dist/button/index",
          "van-field": "module:@vant/weapp/dist/field/index",
          "van-collapse": "module:@vant/weapp/dist/collapse/index",
          "van-collapse-item": "module:@vant/weapp/dist/collapse-item/index",
          "van-search": "module:@vant/weapp/dist/search/index",
          "van-icon": "module:@vant/weapp/dist/icon/index"
    }
}
</config>

<style lang="less" scoped>
.disable{
  pointer-events:none
}
.isdisable{
  pointer-events:auto
}
  .lighterage_page {
    position: relative;
    height: 100vh;
  }
  .content {
    position: absolute;
    width: 100%;
    top: 40rpx;
    bottom: 150rpx;
    padding: 0 24rpx;
    overflow-y: scroll;
    box-sizing: border-box;
  }
  .footer {
    width: 100%;
    position: fixed;
    bottom: 20rpx;
    text-align: center;
    .btn {
      width: 702rpx;
      height: 88rpx;
      background: #005bac;
      color: #fff;
      font-size: 32rpx;
      border-radius: 8rpx;
    }
  }
  .item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    height: 96rpx;
    margin-bottom: 30rpx;
    background: #edf1f4;
    border-radius: 8rpx;
    border: 2rpx solid #e4e5e5;
    padding: 0 40rpx;
    box-sizing: border-box;
    &_value {
      font-size: 32rpx;
      font-weight: 400;
      color: #2b2b2b;
      line-height: 44rpx;
    }
    &_right {
      input {
        display: inline-block;
        width: 160rpx;
        vertical-align: middle;
        text-align: right;
      }
      text {
        margin-left: 20rpx;
        vertical-align: middle;
      }
    }
  }
  .item_name{
    display: flex;
    justify-content:space-between;
    align-items: center;
    height: auto;
    .textarea{
      text-align: right;
      width: 75%;
      padding: 30rpx 0;
      textarea{
        display: block;
        width: 100%;
        // height: 96rpx;
      }
    }
  }
  .goodsCodesDetail {
    font-size: 32rpx;
    .section {
      margin-bottom: 20rpx;
      line-height: 44rpx;
    }
    .flex {
      display: flex;
      .text_l {
        padding-right: 170rpx;
      }
    }
  }
  .list{
    height: 500rpx;
    &_hed{
      position: fixed;
      bottom:500rpx;
      left: 0;
      right: 0;
      z-index: 999;
      background: #fff;
      border-radius:25rpx 25rpx 0 0; 
      &_title{
        font-size: 34rpx;
        font-weight: bold;
        padding: 30rpx;
        display: flex;
        justify-content:space-between;
      }
      .search{
        background:#fff;
        display:flex;
        align-items: center;
        position: relative;
        padding: 20rpx;
        .icon{
          position:absolute;
          font-size: 32rpx;
          left:35rpx;
          top:35rpx;
        }
        input{
          background: #f7f8fa;
          width: 100%;
          padding: 12rpx 0 12rpx 60rpx;
        }
        .placeholder{
          font-size: 28rpx;
        }
      }
    }
    &_item{
      // border: 1rpx solid #000;
      // padding: 0 30rpx;
      height: 100%;
      margin-top: 100rpx;
      .text{
        padding: 20rpx 30rpx;
        border-bottom:1rpx solid #ececec; 
      }
    }
  }
  view .van-cell{
    border: none;
    background: #edf1f4;
    margin-bottom: 20rpx;
    border: 1rpx solid #e4e5e5;
  }
  // view .van-field__label {
  //   color: #2B2B2B;
  //   font-size: 32rpx
  // }
  // view .van-field__input{
  //   text-align: right;
  //   font-size: 32rpx
  // }
</style>
